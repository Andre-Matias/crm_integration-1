{
    "collab_server" : "",
    "contents" : "# the body will contain four fluid rows:\n# first row has the three key performance indicators\n# second row will contain two graphs, a bar graph for sales revenue by region and quarter and a bar graph for prior and current year sales\n# third fluid row will contain a line graph for %percent share, and an interactive bar graph instead of a pie chart\n# a table with a drop down selector to see the data\n\n# Key performance indicators using dynamic value boxes\ntab_main_professionals_box <-fluidRow(\n  useShinyjs(),\n  # first box for sales by quarter and region bar\n  valueBoxOutput(\"mauBoxProf\", width = 2)\n  ,valueBoxOutput(\"percentOfActiveUsersBoxProf\", width = 2)\n  ,valueBoxOutput(\"bouncePaymentBoxProf\", width = 2)\n  ,valueBoxOutput(\"ApprovedQuotesPerActiveBoxProf\", width = 2)\n  ,valueBoxOutput(\"avgNumberOfQuotesBoxProf\", width = 2)\n  ,valueBoxOutput(\"avgRatingUsersBoxProf\", width = 2)\n  \n)\n# Key performance indicators using dynamic value boxes\ntab_main_professionals_box_2 <-fluidRow(\n  useShinyjs(),\n  # first box for sales by quarter and region bar\n  valueBoxOutput(\"bounceRateBoxProf\", width = 2)\n  ,valueBoxOutput(\"sticknessBoxProf\", width = 2)\n  ,valueBoxOutput(\"quotesBoxProf\", width = 2)\n  ,valueBoxOutput(\"ApprovedQuotesBoxProf\", width = 2)\n  ,valueBoxOutput(\"ratedProfessionals123StarsBoxProf\", width = 2)\n  ,valueBoxOutput(\"ratedProfessionals45StarsBoxProf\", width = 2)\n  \n)\n\ntab_main_professionals_line_evolution <- fluidRow(\n  tabsetPanel(\n    id = \"navbar\",\n    tabPanel(title=\"Daily Active Users\",id=\"mauIdProf\",value='mauValProf',\n             box(\n               title = \"Daily Active Users\"\n               ,status = \"primary\"\n               ,solidHeader = FALSE \n               ,collapsible = FALSE\n               ,width = 12\n               ,htmlOutput(\"mauOnboardingProf\")\n             ),\n             box(\n               title = \"Sessions\"\n               ,status = \"primary\"\n               ,solidHeader = FALSE \n               ,collapsible = FALSE\n               ,width = 12\n               ,htmlOutput(\"mauOnboardingProfSessions\")\n             )),\n    tabPanel(title=\"Bounce Rate\",id=\"bounceRateIdProf\",value='bounceRateValProf',\n             box(\n               title = \"Daily Bounce Rate\"\n               ,status = \"primary\"\n               ,solidHeader = FALSE \n               ,collapsible = FALSE\n               ,width = 12\n               ,htmlOutput(\"bounceRateOnboardingProf\")\n             )),\n    tabPanel(title=\"Registered Professionals\",id=\"percentOfActiveUsersIdProf\",value='percentOfActiveUsersValProf',\n             fluidRow(\n               box(\n                 title = \"Daily Registered Professionals\"\n                 ,status = \"primary\"\n                 ,solidHeader = FALSE \n                 ,collapsible = FALSE\n                 ,width = 8\n                 ,htmlOutput(\"percentOfActiveUsersOnboardingProf\")\n               ),\n               infoBoxOutput(\"percentOfActiveUsersOnboardingBoxProf\", width = 4),\n               infoBoxOutput(\"bouncesRegistrationPage\", width = 4)\n             ),\n             fluidRow(\n               box(\n                 title = \"Registered Professionals by Category\"\n                 ,status = \"primary\"\n                 ,solidHeader = FALSE \n                 ,collapsible = FALSE\n                 ,width = 6\n                 ,htmlOutput(\"registeredUsersPerCategory\")\n               ),\n               box(\n                 title = \"Registered Professionals by City\"\n                 ,status = \"primary\"\n                 ,solidHeader = FALSE \n                 ,collapsible = FALSE\n                 ,width = 6\n                 ,htmlOutput(\"registeredUsersPerCity\")\n               )\n             )),\n    \n    tabPanel(title=\"Stickiness\",id=\"sticknessIdProf\",value='sticknessValProf',\n             box(\n               title = \"Daily Stickiness\"\n               ,status = \"primary\"\n               ,solidHeader = FALSE \n               ,collapsible = FALSE\n               ,width = 12\n               ,htmlOutput(\"sticknessOnboardingProf\")\n             ))\n    # tabPanel(title=\"Bounce Payment\",id=\"bouncePaymentIdProf\",value='bouncePaymentValProf',\n    #          htmlOutput(\"bouncePaymentOnboardingProf\")),\n    # \n    # tabPanel(title=\"Quotes\",id=\"quotesIdProf\",value='quotesValProf',\n    #          htmlOutput(\"quotesOnboardingProf\")),\n    # \n    # tabPanel(title=\"Approved Quotes Per Active\",id=\"ApprovedQuotesPerActiveIdProf\",value='ApprovedQuotesPerActiveValProf',\n    #          htmlOutput(\"ApprovedQuotesPerActiveOnboardingProf\")),\n    # \n    # tabPanel(title=\"Approved Quotes\",id=\"ApprovedQuotesIdProf\",value='ApprovedQuotesValProf',\n    #          htmlOutput(\"ApprovedQuotesOnboardingProf\")),\n    # \n    # tabPanel(title=\"Average Number of Quotes\",id=\"avgNumberOfQuotesIdProf\",value='avgNumberOfQuotesValProf',\n    #          htmlOutput(\"avgNumberOfQuotesOnboardingProf\")),\n    # \n    # tabPanel(title=\"Rated Professionals X Stars\",id=\"ratedProfessionalsXStarsIdProf\",value='ratedProfessionalsXStarsValProf',\n    #          htmlOutput(\"ratedProfessionalsXStarsOnboardingProf\")),\n    # \n    # tabPanel(title=\"Average Rating Users\",id=\"avgRatingUsersIdProf\",value='avgRatingUsersValProf',\n    #          htmlOutput(\"avgRatingUsersOnboardingProf\"))\n  )\n)\n\n#############################################################################\n#output for the dashboardBody tabItems\ntab_professional <- tabItem(tabName = \"professionals\",tab_main_professionals_box,tab_main_professionals_box_2,tab_main_professionals_line_evolution)\n\n#function to process the dashboard on the server\nserver_professional <- function(input, output, session) { \n  \n  \n  # fluid row 1, kpi 2: market share\n  output$mauBoxProf <- renderValueBox({\n    valueBox(box_mau,\n             paste(\"Monthly Active Users -\",current_month),\n             icon = icon(\"line-chart\"),\n             color = \"aqua\")\n  })\n  \n  # fluid row 1, kpi 2: market share\n  output$bounceRateBoxProf <- renderValueBox({\n    valueBox(box_bounce_rate,\n             paste(\"Bounce Rate -\",current_month),\n             icon = icon(\"sign-out\"),\n             color = \"aqua\")\n  })\n  \n  \n  # fluid row 1, kpi 1: pieces sold\n  output$percentOfActiveUsersBoxProf <- renderValueBox({\n    valueBox(box_registered_pros\n             ,\"Registered Professionals\"\n             ,icon = icon(\"wrench\")\n             ,color = \"green\")\n  })\n  \n  # fluid row 1, kpi 1: pieces sold\n  output$sticknessBoxProf <- renderValueBox({\n    valueBox(box_stickiness\n             ,\"Stickiness\"\n             ,icon = icon(\"users\")\n             ,color = \"green\")\n  })\n  \n  # fluid row 1, kpi 2: market share\n  output$bouncePaymentBoxProf <- renderValueBox({\n    valueBox(\n      dash\n      ,\"Bounce Rate on Payment Form\"\n      ,icon = icon(\"thumbs-down\")\n      ,color = \"green\")\n  })\n  \n  # fluid row 1, kpi 3: profit margin\n  output$quotesBoxProf <- renderValueBox({\n    valueBox(\n      dash\n      ,\"Quotes\"\n      ,icon = icon(\"money\")\n      ,color = \"green\")\n  })\n  \n  # fluid row 1, kpi 3: profit margin\n  output$ApprovedQuotesPerActiveBoxProf <- renderValueBox({\n    valueBox(\n      dash\n      ,\"Pros with Approved Quotes\"\n      ,icon = icon(\"wrench\")\n      ,color = \"orange\")\n  })\n  \n  # fluid row 1, kpi 3: profit margin\n  output$ApprovedQuotesBoxProf <- renderValueBox({\n    valueBox(\n      dash\n      ,\"Approved Quotes\"\n      ,icon = icon(\"money\")\n      ,color = \"orange\")\n  })\n  \n  \n  # fluid row 1, kpi 3: profit margin\n  output$avgNumberOfQuotesBoxProf <- renderValueBox({\n    valueBox(\n      dash\n      ,\"Quotes until One Gets Approved\"\n      ,icon = icon(\"money\")\n      ,color = \"orange\")\n  })\n  \n  \n  # fluid row 1, kpi 3: profit margin\n  output$ratedProfessionals45StarsBoxProf <- renderValueBox({\n    valueBox(\n      dash\n      ,\"Pros Rated with 4 or 5 Stars\"\n      ,icon = icon(\"wrench\")\n      ,color = \"yellow\")\n  })\n  \n  output$ratedProfessionals123StarsBoxProf <- renderValueBox({\n    valueBox(\n      dash\n      ,\"Pros Rated with 1,2 or 3 Stars\"\n      ,icon = icon(\"wrench\")\n      ,color = \"yellow\")\n  })\n  \n  \n  # fluid row 1, kpi 3: profit margin\n  output$avgRatingUsersBoxProf <- renderValueBox({\n    valueBox(\n      dash\n      ,\"Average User Rating\"\n      ,icon = icon(\"star\")\n      ,color = \"yellow\")\n  })\n  \n  \n  \n  # value box percentage of registered pros\n  output$percentOfActiveUsersOnboardingBoxProf <- renderValueBox({\n    infoBox(\n      \"Registered professionals over Entering Users\"\n      ,formatC(box_registered_pros_mau, format=\"d\", big.mark=',')\n      ,icon = icon(\"wrench\")\n      ,color = \"green\"\n    )\n  })\n  \n  # value box on bouces on registration page\n  output$bouncesRegistrationPage <- renderValueBox({\n    infoBox(\n      \"Bounce Rate on Registration Page\"\n      ,formatC(box_registration_bounce_rate, format=\"d\", big.mark=',')\n      ,icon = icon(\"thumbs-down\")\n      ,color = \"green\"\n    )\n  })\n  \n  #####################\n  # on click of a tab1 valuebox\n  shinyjs::onclick('mauBoxProf',expr={\n    # move to tab2\n    updateTabsetPanel(session, \"navbar\", 'mauValProf')\n  })\n  \n  # on click of a tab1 valuebox\n  shinyjs::onclick('bounceRateBoxProf',expr={\n    # move to tab2\n    updateTabsetPanel(session, \"navbar\", 'bounceRateValProf')\n  })\n  \n  # on click of a tab2 valuebox\n  shinyjs::onclick('percentOfActiveUsersBoxProf',expr={\n    # move to tab2\n    updateTabsetPanel(session, \"navbar\", 'percentOfActiveUsersValProf')\n  })\n  \n  # on click of a tab2 valuebox\n  shinyjs::onclick('sticknessBoxProf',expr={\n    # move to tab2\n    updateTabsetPanel(session, \"navbar\", 'sticknessValProf')\n  })\n  \n  # # on click of a tab2 valuebox\n  # shinyjs::onclick('bouncePaymentBoxProf',expr={\n  #   # move to tab2\n  #   updateTabsetPanel(session, \"navbar\", 'bouncePaymentValProf')\n  # })\n  # \n  # # on click of a tab2 valuebox\n  # shinyjs::onclick('quotesBoxProf',expr={\n  #   # move to tab2\n  #   updateTabsetPanel(session, \"navbar\", 'quotesValProf')\n  # })\n  # \n  # # on click of a tab2 valuebox\n  # shinyjs::onclick('ApprovedQuotesPerActiveBoxProf',expr={\n  #   # move to tab2\n  #   updateTabsetPanel(session, \"navbar\", 'ApprovedQuotesPerActiveValProf')\n  # })\n  # \n  # # on click of a tab2 valuebox\n  # shinyjs::onclick('ApprovedQuotesBoxProf',expr={\n  #   # move to tab2\n  #   updateTabsetPanel(session, \"navbar\", 'ApprovedQuotesValProf')\n  # })\n  # \n  # # on click of a tab2 valuebox\n  # shinyjs::onclick('avgNumberOfQuotesBoxProf',expr={\n  #   # move to tab2\n  #   updateTabsetPanel(session, \"navbar\", 'avgNumberOfQuotesValProf')\n  # })\n  # \n  # # on click of a tab2 valuebox\n  # shinyjs::onclick('ratedProfessionalsXStarsBoxProf',expr={\n  #   # move to tab2\n  #   updateTabsetPanel(session, \"navbar\", 'ratedProfessionalsXStarsValProf')\n  # })\n  # \n  # # on click of a tab2 valuebox\n  # shinyjs::onclick('avgRatingUsersBoxProf',expr={\n  #   # move to tab2\n  #   updateTabsetPanel(session, \"navbar\", 'avgRatingUsersValProf')\n  # })\n  \n  \n  # # fluid row Gold, graph 2: sales be region current/prior year\n  goldProf_daily <- as.data.frame(subset(df_teste_daily, bucket == \"GOLD\"))\n  \n  output$mauOnboardingProf <- renderGvis({\n    chart <- gvisLineChart(df_dailyDB, xvar = 'date', yvar = 'dau', options = list(\n      legend = 'none',\n      backgroundColor = \"{fill:'transparent'}\",\n      vAxis = \"{gridlines:{color: '#ECF0F5'}, format: '#'}\",\n      hAxis = \"{gridlines:{color: 'transparent'}}\",\n      colors = \"['#0D737B']\"\n    ))\n    chart\n  })\n  \n  output$mauOnboardingProfSessions <- renderGvis({\n    chart <- gvisLineChart(df_dailyDB, xvar = 'date', yvar = 'sessions', options = list(\n      legend = 'none',\n      backgroundColor = \"{fill:'transparent'}\",\n      vAxis = \"{gridlines:{color: '#ECF0F5'}, format: '#'}\",\n      hAxis = \"{gridlines:{color: 'transparent'}}\",\n      colors = \"['#0D737B']\"\n    ))\n    chart\n  })\n  \n  \n  \n  output$bounceRateOnboardingProf <- renderGvis({\n    chart <- gvisLineChart(df_dailyDB, xvar = 'date', yvar = 'bounce_rate', options = list(\n      legend = 'none',\n      backgroundColor = \"{fill:'transparent'}\",\n      vAxis = \"{gridlines:{color: '#ECF0F5'}, format: 'percent'}\",\n      hAxis = \"{gridlines:{color: 'transparent'}}\",\n      colors = \"['#00A65A']\"\n    ))\n    chart\n  })\n  \n  output$percentOfActiveUsersOnboardingProf <- renderGvis({\n    i<- 2\n    while (i < nrow(df_dailyDB)+1) {\n      #look up stuff using data from the row\n      #write stuff to the file\n      if(df_dailyDB[i,7]==0){\n        df_dailyDB[i,7] <- df_dailyDB[i-1,7]\n      }\n      i<- i+1\n    }\n    chart <- gvisLineChart(df_dailyDB, xvar = 'date', yvar = 'registered_professionals', options = list(\n      legend = 'none',\n      backgroundColor = \"{fill:'transparent'}\",\n      vAxis = \"{gridlines:{color: '#ECF0F5'}}\",\n      hAxis = \"{gridlines:{color: 'transparent'}}\",\n      colors = \"['#00A65A']\"\n    ))\n    chart\n  })\n  \n  output$registeredUsersPerCategory <- renderGvis({\n    chart <- gvisBarChart(chart_prosPerL1cat, xvar = 'l1cat', yvar = c('count','count.html.tooltip'), options=list(\n      legend = 'none',\n      tooltip=\"{isHtml:'true',trigger:'selection'}\",\n      chartArea= \"{left:150}\",\n      height=347\n      ))\n    chart\n  })\n  \n  output$registeredUsersPerCity <- renderGvis({\n    chart <- gvisGeoChart(df_citiesDB, locationvar = 'city_desc', colorvar = 'count',options=list(\n      region = 'PL',\n      displayMode='markers',\n      resolution= 'provinces',\n      colorAxis=\"{colors:['#F39C12','#00A65A']}\",\n      backgroundColor='#4D9EB2'\n    ))\n    chart\n  })\n  \n  output$sticknessOnboardingProf <- renderGvis({\n    chart <- gvisLineChart(df_dailyDB, xvar = 'date', yvar = 'stickiness', options = list(\n      legend = 'none',\n      backgroundColor = \"{fill:'transparent'}\",\n      vAxis = \"{gridlines:{color: '#ECF0F5'}}\",\n      hAxis = \"{gridlines:{color: 'transparent'}}\",\n      colors = \"['#0D737B']\"\n    ))\n    chart\n  })\n  \n  \n}\n\n\n\n",
    "created" : 1494431604087.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2840372680",
    "id" : "55C3E096",
    "lastKnownWriteTime" : 1494432158,
    "last_content_update" : 1494432158927,
    "path" : "~/GitHub/verticals-bi/R/RC0006-Fixly/body/body_professional.R",
    "project_path" : "body/body_professional.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}